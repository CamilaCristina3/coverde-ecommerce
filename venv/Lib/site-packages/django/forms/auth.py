
from django.utils.translation import gettext_lazy as _
from django import forms
from django.contrib.auth.forms import (
    UserCreationForm, 
    AuthenticationForm,
    PasswordResetForm,
    SetPasswordForm
)
from django.contrib.auth import get_user_model
from django.utils.translation import gettext_lazy as _

User = get_user_model()

class CustomUserCreationForm(UserCreationForm):
    error_messages = {
        'password_mismatch': _('As palavras-passe não coincidem.'),
    }
    
    password1 = forms.CharField(
        label=_("Palavra-passe"),
        strip=False,
        widget=forms.PasswordInput(attrs={'autocomplete': 'new-password'}),
    )
    password2 = forms.CharField(
        label=_("Confirmação da palavra-passe"),
        widget=forms.PasswordInput(attrs={'autocomplete': 'new-password'}),
        strip=False,
    )

    class Meta:
        model = User
        fields = ('email', 'nome', 'sobrenome')
        labels = {
            'email': _('E-mail'),
            'nome': _('Nome'),
            'sobrenome': _('Apelido'),
        }

class CustomAuthForm(AuthenticationForm):
    username = forms.EmailField(
        label=_("E-mail"),
        widget=forms.EmailInput(attrs={'autocomplete': 'email'})
    )
    password = forms.CharField(
        label=_("Palavra-passe"),
        strip=False,
        widget=forms.PasswordInput(attrs={'autocomplete': 'current-password'}),
    )
    error_messages = {
        'invalid_login': _(
            "Por favor, introduza um e-mail e palavra-passe corretos. "
            "Note que ambos os campos diferenciam maiúsculas de minúsculas."
        ),
        'inactive': _("Esta conta está inativa."),
    }

class CustomPasswordResetForm(PasswordResetForm):
    email = forms.EmailField(
        label=_("E-mail"),
        max_length=254,
        widget=forms.EmailInput(attrs={'autocomplete': 'email'})
    )

class CustomSetPasswordForm(SetPasswordForm):
    new_password1 = forms.CharField(
        label=_("Nova palavra-passe"),
        widget=forms.PasswordInput(attrs={'autocomplete': 'new-password'}),
        strip=False,
    )
    new_password2 = forms.CharField(
        label=_("Confirmação da nova palavra-passe"),
        strip=False,
        widget=forms.PasswordInput(attrs={'autocomplete': 'new-password'}),
    )
    error_messages = {
        'password_mismatch': _('As duas palavras-passe não coincidem.'),
    }